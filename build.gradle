plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.course'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '19'
targetCompatibility = '19'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.course.term5cw'
    mainClass = 'com.course.term5cw.Main'
}

javafx {
    version = '20.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    implementation('com.fasterxml.jackson.core:jackson-databind:2.12.7.1')

    implementation("io.github.java-diff-utils:java-diff-utils:4.12")
//  Patch{deltas=[[ChangeDelta, position: 0, lines: [T] to [t]], [ChangeDelta, position: 8, lines: [ne] to [old]], [DeleteDelta, position: 11, lines: [w]], [InsertDelta, position: 18, lines: [!]]]}

//  implementation("org.incava:java-diff:1.1")
//  [del: [0, 0] add: [0, 0], del: [2, 4] add: [2, 3]]

//  implementation("com.cloudbees:diff4j:1.3")
//  [Difference(DELETE, 1, 1, 0, 0), Difference(CHANGE, 4, 4, 3, 3), Difference(CHANGE, 6, 6, 5, 7)]

//  implementation("com.googlecode.java-diff-utils:diffutils:1.3.0")
//  [[ChangeDelta, position: 0, lines: [this] to [This]], [ChangeDelta, position: 2, lines: [ old] to [ new]], [ChangeDelta, position: 4, lines: [ of,  text, !] to [?]]]

//  implementation("com.sksamuel.diff:diff:1.1.11") // same as  implementation("org.bitbucket.cowwoc:diff-match-patch:1.2")
//  [Diff(EQUAL,"this is "), Diff(DELETE,"old"), Diff(INSERT,"new"), Diff(EQUAL," stri"), Diff(INSERT,"a"), Diff(EQUAL,"ng!"), Diff(INSERT," LMFA")]/**/

//    implementation("org.apache.commons:commons-lang3:3.14.0")
//    new string !

}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}